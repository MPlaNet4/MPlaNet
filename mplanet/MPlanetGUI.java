package mplanet;


import java.awt.*;
import javax.swing.*;
import java.util.*;
import java.net.*;
import java.io.*;
//import mpthemes.*;
import mplanet.sounds.*;


public class MPlanetGUI extends JFrame {
    
    
    public MPlanetGUI() {
        initComponents();
        myInit();
        
    }
    
    public MPlanetGUI(MPlanetInfo i) {
        info = i;
        initComponents();
        myInit();
        
        try {
            com.incors.plaf.kunststoff.KunststoffLookAndFeel.setCurrentTheme( new com.incors.plaf.kunststoff.themes.CharcoalTheme());
            javax.swing.UIManager.setLookAndFeel("com.incors.plaf.kunststoff.KunststoffLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        }catch ( Exception e ) {
        }
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize);
        //setLocation((screenSize.width-521)/2,(screenSize.height-366)/2);
        setVisible(true);
        new PlaySound("mplanet/sounds/welcome.mp3");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        skinsMenu = new javax.swing.JPopupMenu();
        threedLNF = new javax.swing.JRadioButtonMenuItem();
        kunststoffLNF = new javax.swing.JRadioButtonMenuItem();
        metalLNF = new javax.swing.JRadioButtonMenuItem();
        xboxLNF = new javax.swing.JRadioButtonMenuItem();
        oyoahaLNF = new javax.swing.JRadioButtonMenuItem();
        khakiLNF = new javax.swing.JRadioButtonMenuItem();
        aboutDialog = new javax.swing.JDialog();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        typedMessage = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        toLabel = new javax.swing.JLabel();
        hostList = new javax.swing.JComboBox();
        orLabel = new javax.swing.JLabel();
        multicastButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatHistory = new javax.swing.JTextArea();
        mainpane = new javax.swing.JScrollPane();
        mainpanel = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        connectButton = new javax.swing.JButton();
        remAssButton = new javax.swing.JButton();
        fileSharButton = new javax.swing.JButton();
        chatButton = new javax.swing.JButton();
        soundButton = new javax.swing.JButton();
        skinsButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        threedLNF.setText("3D");
        threedLNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threedLNFActionPerformed(evt);
            }
        });

        skinsMenu.add(threedLNF);
        kunststoffLNF.setText("Kunststoff");
        kunststoffLNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kunststoffLNFActionPerformed(evt);
            }
        });

        skinsMenu.add(kunststoffLNF);
        metalLNF.setText("Metal");
        metalLNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metalLNFActionPerformed(evt);
            }
        });

        skinsMenu.add(metalLNF);
        xboxLNF.setText("X-box");
        xboxLNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xboxLNFActionPerformed(evt);
            }
        });

        skinsMenu.add(xboxLNF);
        oyoahaLNF.setText("Oyoaha");
        oyoahaLNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oyoahaLNFActionPerformed(evt);
            }
        });

        skinsMenu.add(oyoahaLNF);
        khakiLNF.setText("Khaki");
        khakiLNF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khakiLNFActionPerformed(evt);
            }
        });

        skinsMenu.add(khakiLNF);
        aboutDialog.setTitle("About...");
        aboutDialog.setModal(true);
        aboutDialog.setResizable(false);
        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setEditable(false);
        jTextArea1.setText(" This software was developed at \n Manipal Institute of Technology,\n as a final year Computer Engineering project by: \n\n Pradhan Varambally \n Prajwal B. \n Rakshith N. Rao \n Rohan John Fernandes \n\n Under the guidance of  Ms. Sujata R. Kulakarni,\n Lecturer, Dept. of Comp. Sc. & Engg., \n Manipal Institute of Technology.\n\n \u00a9 2003 Team MPlaNet, MIT\n\n Anyone trying to resell this software\n is punishable under IT laws of India. \n ");
        jTextArea1.setBorder(new javax.swing.border.EtchedBorder());
        aboutDialog.getContentPane().add(jTextArea1, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MPlanet");
        setBackground(new java.awt.Color(204, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/logo.gif")));
        getContentPane().add(jButton1, java.awt.BorderLayout.NORTH);

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setOneTouchExpandable(true);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        typedMessage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        typedMessage.setText("Message Here");
        typedMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessage(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 2, 4);
        jPanel2.add(typedMessage, gridBagConstraints);

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessage(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 2);
        jPanel2.add(sendButton, gridBagConstraints);

        toLabel.setText("To:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(toLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(hostList, gridBagConstraints);

        orLabel.setText("OR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(orLabel, gridBagConstraints);

        multicastButton.setText("Multicast");
        multicastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multicastMessage(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 4);
        jPanel2.add(multicastButton, gridBagConstraints);

        chatHistory.setEditable(false);
        chatHistory.setLineWrap(true);
        jScrollPane1.setViewportView(chatHistory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 4, 4);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel2);

        mainpane.setRequestFocusEnabled(false);
        mainpane.setVerifyInputWhenFocusTarget(false);
        mainpane.setAutoscrolls(true);
        mainpanel.setLayout(new java.awt.GridLayout(10, 1));

        mainpane.setViewportView(mainpanel);

        jSplitPane1.setRightComponent(mainpane);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jToolBar2.setFloatable(false);
        jToolBar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        connectButton.setFont(new java.awt.Font("Default", 0, 10));
        connectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/connect.gif")));
        connectButton.setText("  Connect ");
        connectButton.setToolTipText("Connect");
        connectButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //connectButton.setIconTextGap(1);
        connectButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDialog(evt);
            }
        });

        jToolBar2.add(connectButton);

        remAssButton.setFont(new java.awt.Font("Default", 0, 10));
        remAssButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/remote.gif")));
        remAssButton.setText("Assistance");
        remAssButton.setToolTipText("Remote Assistance");
        remAssButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //remAssButton.setIconTextGap(1);
        remAssButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        remAssButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remAssButtonActionPerformed(evt);
            }
        });

        jToolBar2.add(remAssButton);

        fileSharButton.setFont(new java.awt.Font("Default", 0, 10));
        fileSharButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/fileshare.GIF")));
        fileSharButton.setText("ShareFiles");
        fileSharButton.setToolTipText("File Sharing");
        fileSharButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //fileSharButton.setIconTextGap(1);
        fileSharButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        fileSharButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSharButtonActionPerformed(evt);
            }
        });

        jToolBar2.add(fileSharButton);

        chatButton.setFont(new java.awt.Font("Default", 0, 10));
        chatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/chat.gif")));
        chatButton.setText("    Chat     ");
        chatButton.setToolTipText("Chat");
        chatButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //chatButton.setIconTextGap(1);
        chatButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        chatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatButtonActionPerformed(evt);
            }
        });

        jToolBar2.add(chatButton);

        soundButton.setFont(new java.awt.Font("Default", 0, 10));
        soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/say.gif")));
        soundButton.setText("   Sound   ");
        soundButton.setToolTipText("Sound");
        soundButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //soundButton.setIconTextGap(1);
        soundButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        soundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundButtonActionPerformed(evt);
            }
        });

        jToolBar2.add(soundButton);

        skinsButton.setFont(new java.awt.Font("Default", 0, 10));
        skinsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/skins.GIF")));
        skinsButton.setText("     Skins    ");
        skinsButton.setToolTipText("Skins");
        skinsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //skinsButton.setIconTextGap(1);
        skinsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        skinsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skinsButtonActionPerformed(evt);
            }
        });

        jToolBar2.add(skinsButton);

        aboutButton.setFont(new java.awt.Font("Default", 0, 10));
        aboutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/about.GIF")));
        aboutButton.setText("     Help     ");
        aboutButton.setToolTipText("About");
        aboutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //aboutButton.setIconTextGap(1);
        aboutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAboutDialog(evt);
            }
        });

        jToolBar2.add(aboutButton);

        exitButton.setFont(new java.awt.Font("Default", 0, 10));
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/exit.gif")));
        exitButton.setText(" Terminate");
        exitButton.setToolTipText("Exit!!");
        exitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        //exitButton.setIconTextGap(1);
        exitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jToolBar2.add(exitButton);

        getContentPane().add(jToolBar2, java.awt.BorderLayout.WEST);

    }//GEN-END:initComponents

    private void khakiLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khakiLNFActionPerformed
       javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme(new mpthemes.KhakiMetalTheme());
            changeLnf("javax.swing.plaf.metal.MetalLookAndFeel");
    }//GEN-LAST:event_khakiLNFActionPerformed

    private void oyoahaLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oyoahaLNFActionPerformed
        javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme(new javax.swing.plaf.metal.DefaultMetalTheme()); 
        //com.oyoaha.swing.plaf.oyoaha.OyoahaLookAndFeel.setCurrentTheme( new com.oyoaha.swing.plaf.oyoaha.OyoahaMetalTheme());
         changeLnf("com.oyoaha.swing.plaf.oyoaha.OyoahaLookAndFeel");        
    }//GEN-LAST:event_oyoahaLNFActionPerformed

    private void xboxLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xboxLNFActionPerformed
            com.incors.plaf.kunststoff.KunststoffLookAndFeel.setCurrentTheme( new com.incors.plaf.kunststoff.themes.CharcoalTheme());
            changeLnf("com.incors.plaf.kunststoff.KunststoffLookAndFeel");
    }//GEN-LAST:event_xboxLNFActionPerformed
    
    private void showAboutDialog(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAboutDialog
        new MPlanetHelp().show();
    }//GEN-LAST:event_showAboutDialog
    
	private void multicastMessage(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multicastMessage
            String mes = typedMessage.getText();
            typedMessage.setText("");
            chatHistory.setText(chatHistory.getText()+"\nYou say:   "+mes);
            chatMan.multicastMessage(mes);
	}//GEN-LAST:event_multicastMessage
        
	private void sendMessage(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessage
            String mes = typedMessage.getText();
            typedMessage.setText("");
            chatHistory.setText(chatHistory.getText()+"\nYou say:   "+mes);
            String s = (String)hostList.getSelectedItem();
            if(s!=null&&!s.equals("")){
                chatMan.sendMessage(mes,s);
            }
	}//GEN-LAST:event_sendMessage
        
	private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
            try{
                String mcOff = "OFF"+" "+info.user.name;
                byte offBuf[] = new byte[mcOff.length()];
                offBuf = mcOff.getBytes();
                DatagramPacket dp = new DatagramPacket(offBuf, offBuf.length, conMan.mcGroupAdd, conMan.mcPort);
                conMan.ms.send(dp);
            }catch(Exception e){}
            System.exit(0);
	}//GEN-LAST:event_exitButtonActionPerformed
        
	private void chatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatButtonActionPerformed
            // Add your handling code here:
            if(jSplitPane1.getDividerLocation()<7)
                jSplitPane1.setDividerLocation(300);
            else
                jSplitPane1.setDividerLocation(1);
	}//GEN-LAST:event_chatButtonActionPerformed
        
	private void soundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundButtonActionPerformed
            if(info.isSoundOn){
                info.isSoundOn = false;
                soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/busysay.gif")));
            }
            else{
                info.isSoundOn = true;
                soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/say.gif")));
            }
	}//GEN-LAST:event_soundButtonActionPerformed
        
	private void metouiaLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metouiaLNFActionPerformed
            changeLnf("net.sourceforge.mlf.metouia.MetouiaLookAndFeel");
	}//GEN-LAST:event_metouiaLNFActionPerformed
        
	private void metalLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metalLNFActionPerformed
            javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme(new javax.swing.plaf.metal.DefaultMetalTheme());
            changeLnf("javax.swing.plaf.metal.MetalLookAndFeel");
	}//GEN-LAST:event_metalLNFActionPerformed
        
	private void kunststoffLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kunststoffLNFActionPerformed
            com.incors.plaf.kunststoff.KunststoffLookAndFeel.setCurrentTheme( new com.incors.plaf.kunststoff.themes.KunststoffDesktopTheme());
            changeLnf("com.incors.plaf.kunststoff.KunststoffLookAndFeel");
	}//GEN-LAST:event_kunststoffLNFActionPerformed
        
	private void threedLNFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threedLNFActionPerformed
            changeLnf("swing.addon.plaf.threeD.ThreeDLookAndFeel");
	}//GEN-LAST:event_threedLNFActionPerformed
        
	private void skinsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skinsButtonActionPerformed
            skinsMenu.show(skinsButton,skinsButton.getWidth(),0);
	}//GEN-LAST:event_skinsButtonActionPerformed
        
        private void myInit() {
            
            
            
            info = new MPlanetInfo();///IMP!!!!!! -> Delete this instantiation coz its already done in class MPlanet
            //info.user = new MPlanetHost(); ///IMP!!!!!! -> Delete this instantiation coz its already done in class MPlanet
            lnfGroup = new ButtonGroup();
            addLnfToGroup();
            hostGroup = new ButtonGroup();
            //Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
            //setSize(d);
            info.remAssButton = remAssButton;
            info.fileSharButton = fileSharButton;
        }
        
	private void fileSharButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSharButtonActionPerformed
            if(info.state.filShrOn){
                try{
                    try{
                        fsRequestor.explorer.sk.close();
                        fsRequestor.explorer.searchThread.s.close();
                    }catch(Exception ex){}
                    fsRequestor.explorer.dispose();
                }catch(Exception e){}
                try{
                    reqMan.filShrProcessor.expdriver.runThread = false;
                }catch(Exception e){}
                
                info.state.filShrOn = false;
                //fileSharButton.setText("filesharing");
                fileSharButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/fileshare.gif")));
            }
            else{
                MPlanetHost host = getSelectedHost();
                if(host == null){
                    if(info.isSoundOn){
                        new PlaySound("mplanet/sounds/selectahost.mp3");
                    }
                    new MPError("Please select a host");
                    return;
                }
                fsRequestor = new MPRequestor(host,info,"fs");
                fsRequestor.t.start();
            }
	}//GEN-LAST:event_fileSharButtonActionPerformed
        
	private void remAssButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remAssButtonActionPerformed
            if(info.state.remAssOn){
                try{
                    remRequestor.screenClient.runThread = false;
                }catch(Exception e){}
                try{
                    reqMan.remAssProcessor.screenServer.rs.setVisible(false);
                    reqMan.remAssProcessor.screenServer.rs.dispose();
                    reqMan.remAssProcessor.screenServer.runThread = false;
                }catch(Exception e){}
                info.state.remAssOn = false;
                //remAssButton.setText("remass");
                remAssButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/remote.gif")));
            }
            else{
                MPlanetHost host = getSelectedHost();
                
                if(host == null){
                    if(info.isSoundOn){
                        new PlaySound("mplanet/sounds/selectahost.mp3");
                    }
                    new MPError("Please select a host");
                    return;
                }
                remRequestor = new MPRequestor(host,info,"rem");
                remRequestor.t.start();
            }
	}//GEN-LAST:event_remAssButtonActionPerformed
        
	private void showDialog(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDialog
            if(!info.state.isOnline){
                while(true){
                    String n = JOptionPane.showInputDialog(this,"Enter user name...");
                    if(n==null)
                        break;
                    if(!n.equals("")){
                        info.user.name = n.trim();
                        info.user.port = info.reqPort;
                        try{
                            info.user.ip = InetAddress.getLocalHost().getHostAddress();
                        }catch(Exception e){}
                        System.out.println(info.user.port+" "+info.user.ip+" "+info.user.name);
                        
                        info.state.isOnline = true;
                        
                        this.setTitle("MPlaNet - "+info.user.name);
                        
                        //start the connection manager
                        conMan = new MPlanetConMan(info,this);
                        conMan.t.start();
                        //start the service manager
                        reqMan = new MPlanetReqMan(info,this);
                        reqMan.t.start();
                        //start chat manager
                        chatMan = new MPlanetChat(info,this);
                        chatMan.t.start();
                        
                        //connectButton.setText("Connected");
                        connectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mplanet/images/busyconnect.gif")));
                        break;
                    }
                    if(info.isSoundOn){
                        new PlaySound("mplanet/sounds/validname.mp3");
                    }
                    new MPError("Enter a valid name");
                }
            }
            else{
                if(info.isSoundOn){
                    new PlaySound("mplanet/sounds/alrdyconnected.mp3");
                }
                new MPError("You are already connected");
            }
	}//GEN-LAST:event_showDialog
        
        
        /** Exit the Application */
        private void exitForm(java.awt.event.WindowEvent evt)
	{//GEN-FIRST:event_exitForm
            if(info.state.remAssOn||info.state.filShrOn){
                if(info.isSoundOn){
                    new PlaySound("mplanet/sounds/teminateallproc.mp3");
                }
                new MPError("Please terminate all running processes");
                return;
            }
            
            try{
                String mcOff = "OFF"+" "+info.user.name;
                byte offBuf[] = new byte[mcOff.length()];
                offBuf = mcOff.getBytes();
                DatagramPacket dp = new DatagramPacket(offBuf, offBuf.length, conMan.mcGroupAdd, conMan.mcPort);
                conMan.ms.send(dp);
            }catch(Exception e){}
            System.exit(0);
	}//GEN-LAST:event_exitForm
        
        
        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
            
            
            new MPlanetGUI().show();
            
        }
        
        
        public void refresh() {
            mainpanel.removeAll();
            mainpanel.repaint();
            System.out.println("refreshing");
            
            hostGroup = null;
            hostGroup = new ButtonGroup();
            hostList.removeAllItems();
            for(int i=0;i<info.hosts.size();i++) {
                System.out.println("gui : "+((MPlanetHost)info.hosts.elementAt(i)).name);
                hostGroup.add(new MPHostIcon(((MPlanetHost)info.hosts.elementAt(i)).name,info,(MPlanetHost)info.hosts.elementAt(i)));
                hostList.addItem((Object)((MPlanetHost)info.hosts.elementAt(i)).name);
            }
            Enumeration hostEnum = hostGroup.getElements();
            
            for(int i=0;i<info.hosts.size();i++) {
                mainpanel.add((MPHostIcon)hostEnum.nextElement());
            }
            mainpanel.revalidate();
            mainpanel.repaint();
            System.out.println("refreshed");
        }
        
        MPlanetHost getSelectedHost(){
            Enumeration hostEnum = hostGroup.getElements();
            MPHostIcon temp = null;
            try{
                for(int i=0;i<info.hosts.size();i++) {
                    temp = ((MPHostIcon)hostEnum.nextElement());
                    if(temp.isSelected())
                        return temp.host;
                }
            }
            catch(Exception e){}
            return null;
        }
        
        void addLnfToGroup(){
            lnfGroup.add(kunststoffLNF);
            lnfGroup.add(threedLNF);
            lnfGroup.add(metalLNF);
            lnfGroup.add(xboxLNF);
            lnfGroup.add(oyoahaLNF);
            lnfGroup.add(khakiLNF);
        }
        
        void changeLnf(String path){
            try {
                
                UIManager.setLookAndFeel(path);
                //                javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme( new AquaMetalTheme());
                SwingUtilities.updateComponentTreeUI(this);
            }catch(Exception e){
                new MPError("Cannot change the look and feel");
            }
        }
        
        public MPlanetConMan conMan;
        public MPlanetReqMan reqMan;
        public MPlanetChat chatMan;
        private MPRequestor remRequestor;
        private MPRequestor fsRequestor;
        public ButtonGroup hostGroup;
        public ButtonGroup lnfGroup;
        
        private MPlanetInfo info;
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem threedLNF;
    private javax.swing.JTextField typedMessage;
    private javax.swing.JButton connectButton;
    private javax.swing.JRadioButtonMenuItem kunststoffLNF;
    private javax.swing.JLabel toLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JButton fileSharButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton exitButton;
    private javax.swing.JRadioButtonMenuItem oyoahaLNF;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JButton chatButton;
    private javax.swing.JButton skinsButton;
    private javax.swing.JComboBox hostList;
    private javax.swing.JButton soundButton;
    private javax.swing.JScrollPane mainpane;
    private javax.swing.JButton aboutButton;
    private javax.swing.JRadioButtonMenuItem metalLNF;
    public javax.swing.JTextArea chatHistory;
    private javax.swing.JButton sendButton;
    private javax.swing.JButton remAssButton;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPopupMenu skinsMenu;
    private javax.swing.JRadioButtonMenuItem xboxLNF;
    private javax.swing.JLabel orLabel;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton multicastButton;
    private javax.swing.JRadioButtonMenuItem khakiLNF;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
}

